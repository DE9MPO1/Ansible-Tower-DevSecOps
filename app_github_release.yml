---
- name: Push Build to GitHub
  hosts: localhost
  # hosts: ciservers
  connection: local
  gather_facts: false

  tasks:
  # - name: Create a new release
  #   github_release:
  #     token: "{{ github_token }}"
  #     user: craig-br
  #     repo: juice-shop
  #     action: create_release
  #     tag: v8.6.2
  #     target: master
  #     name: v8.6.2
  #     body: Some description
  #     draft: false
  #     prerelease: true

  - name: debug jenkisn vars
    debug:
      msg: "{{ my_var }}"

  - name: Get Current JuiceShop Releases
    uri:
      url: https://api.github.com/repos/craig-br/juice-shop/releases
      method: GET
      headers:
        Accept: application/vnd.github.inertia-preview+json
      status_code: 200
    register: juiceshop_releases

  
  # - name: debug json
  #   debug:
  #     msg: "{{ item.id }}"
  #   loop: "{{ juiceshop_releases.json }}"
  #   when: item.tag_name == "v8.6.2"

  # - name: Get ID for Dmeo version of JuiceShop
  #   set_fact:
  #       release_id: "{{ item.id }}"
  #       cacheable: yes
  #   loop: "{{ juiceshop_releases.json }}"
  #   when: item.tag_name == "v8.6.2"

  # - name: Create new GitHub Release
  #   uri:
  #     url: "https://api.github.com/repos/craig-br/juice-shop/releases}"
  #     url: "https://api.github.com/repos/craig-br/juice-shop/releases/{{ release_id }}"
  #     method: POST
  #     headers:
  #       Authorization: "token {{ github_token }}"
        # Accept: application/vnd.github.inertia-preview+json
  #     body_format: json
  #     body:
  #       "{{ github_release_vars | to_json }}"
  #     status_code: 201
  #   register: github_rel_response
  #   ignore_errors: true

  
  # - name: debug json
  #   debug:
  #     msg: "{{ github_rel_response.json }}"
    # status_code: 200

  # - name: Upload binary to new GitHub Release
  #   uri:
  #     url: https://uploads.github.com/repos/craig-br/juice-shop/releases/$id/assets?name=artifact.zip
  #     method: POST
  #     headers:
  #       Content-Type: application/octet-stream
  #       Authorization: "token {{ github_token }}"
  #       Accept: application/vnd.github.inertia-preview+json
  #     # body_format: json
  #     body:
  #       "{{ github_release_vars | to_json }}"
  #       # '{"tag_name": "latest", "target_commitish": "master", "name": "test-name", "body": "test descriptiojn", "draft": false, "prerelease": true}'
  #     status_code: 201
  #   register: github_rel_response
  #   ignore_errors: true

  # - name: Get latest release of testuseer/testrepo
  #   github_release:
  #     token: 6e814356bd4d032d0494c8039c53234040de5c8c
  #     user: craig-br
  #     repo: juice-shop
  #     action: latest_release


  # Create a release
# release=$(curl -XPOST -H "Authorization:token $token" --data "{\"tag_name\": \"$tag\", \"target_commitish\": \"master\", \"name\": \"$name\", \"body\": \"$description\", \"draft\": false, \"prerelease\": true}" https://api.github.com/repos/<USERNAME>/<REPOSITORY>/releases)# Extract the id of the release from the creation response
# id=$(echo "$release" | sed -n -e 's/"id":\ \([0-9]\+\),/\1/p' | head -n 1 | sed 's/[[:blank:]]//g')

# Upload the artifact
# curl -XPOST -H "Authorization:token $token" -H "Content-Type:application/octet-stream" --data-binary @artifact.zip https://uploads.github.com/repos/<USERNAME>/<REPOSITORY>/releases/$id/assets?name=artifact.zip