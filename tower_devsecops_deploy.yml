---
- name: Configure Tower for DevSecOps Demo

  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  # vars_files:
  #   ./vars/tower_vars.yml
  collections:
   - ansible.tower

  tasks:    
  - name: Create {{ tower_organization }} Organisation
    tower_organization:
      name: "{{ tower_organization }}"
      description: Juice Shop Ltd Organisation
      state: present
    tags:
      - tower-config
      - create-org

  - name: Create AWS credential
    tower_credential:
      name: AWS Credentials
      description: AWS Credentials DevSecOps Demo
      kind: aws
      organization: "{{ tower_organization }}"
      username: "{{ aws_username }}"
      password: "{{ aws_password }}"
      state: present
    tags:
      - tower-config
      - aws-cred

  - name: Fetch EC2 private key
    slurp:
      src: "{{ aws_pvt_key }}"
    register: aws_ssh_key

  - name: Create EC2 Instance credential
    tower_credential:
      name: EC2 Instance Credential
      description: EC2 Credentials DevSecOps Demo
      credential_type: Machine
      organization: "{{ tower_organization }}"
      inputs:
        ssh_key_data: "{{ aws_ssh_key['content'] | b64decode }}"
    tags:
      - tower-config
      - ec2-cred

  - name: Create Demo VM SSH Credential
    tower_credential:
      name: VM SSH Credential
      description: VM Demo SSH Credential
      credential_type: Machine
      organization: "{{ tower_organization }}"
      inputs:
        ssh_key_data: "{{ aws_ssh_key['content'] | b64decode }}"
    tags:
      - tower-config
      - ssh-cred

  - name: Create F5 Credential Type
    tower_credential_type:
      name: f5
      description: F5 BigIP Credential
      kind: cloud
      inputs: "{{ lookup('file', 'tower_cred_inputs_f5.json') }}"
    tags:
      - tower-config
      - f5-cred-type

  - name: Create F5 Credential  
    tower_credential:
      name: BigIP Credential
      description: BIGIP Credential
      credential_type: f5
      organization: "{{ tower_organization }}"
      inputs:
        user: "{{ f5_user }}"
        password: "{{ f5_password }}"
    tags:
      - tower-config
      - f5-cred  
  
  - name: Fetch GitHub Key
    slurp:
      src: "{{ github_pvt_key }}"
    register: github_pvt_key_out
    tags:
      - tower-config
      - github-cred

  - name: Create GitHub Credential
    tower_credential:
      organization: "{{ tower_organization }}"
      name: GitHub Credential
      description: GitHub Credential DevSecOps Demo
      credential_type: Source Control
      inputs:
        ssh_key_data: "{{ github_pvt_key_out['content'] | b64decode }}"
        username: craig-br
    tags:
      - tower-config
      - github-cred

  - name: Create DevSecOps Project
    tower_project:
      name: JuiceShop Project
      organization: "{{ tower_organization }}"
      allow_override: true
      description: JuiceShop Ops Playbooks
      scm_branch: development
      scm_clean: true
      scm_credential: GitHub Credential
      scm_type: git
      scm_url: "{{ github_scm_url }}"
    tags:
      - tower-config
      - git-project


  - name: Create AWS Inventory
    tower_inventory:
      name: JuiceShop AWS Insatances
      description: JuiceShop AWS Insatances
      organization: "{{ tower_organization }}"
    tags:
      - tower-config
      - aws-inv    

  - name: Add AWS Web Server Inventory Source
    tower_inventory_source:
      name: JuiceShop AWS Source
      description: JuiceShop AWS Source
      inventory: JuiceShop AWS Insatances
      credential: AWS Credentials
      overwrite: True
      source: ec2
      update_on_launch: false
      # instance_filters: 
      #   "tag:function={{ ec2_webserver_tag }}"

    tags:
      - tower-config
      - aws-inv 



  # - name: Create {{ tower_insights_cred_name }}
  #   tower_credential:
  #     name: "{{ tower_insights_cred_name }}"
  #     description: Craig Insights Credentials for Insghts Demo
  #     kind: insights
  #     organization: "{{ tower_organization }}"
  #     username: "{{ insights_cred_user }}"
  #     password: "{{ insights_cred_password }}"
  #     user: admin
  #     state: present


 
  # - name: Create "{{ tower_insights_inv_name }}"
  #   tower_inventory:
  #     name: "{{ tower_insights_inv_name }}"
  #     description: Craig Insights Inventory
  #     state: present
  #     tower_host: "{{ tower_host }}"
  #     organization: "{{ tower_organization }}"
  #     tower_username: "{{ tower_username }}"
  #     tower_password: "{{ tower_password }}"
  #     validate_certs: false
  #   tags:
  #     - tower-config
  #     - insights-inventory

  # - name: Create and Update "{{ tower_insights_inv_name }}"
  #   command: >
  #     tower-cli inventory create
  #     --name "{{ tower_insights_inv_name }}"
  #     --description "Insights Demo Inventory"
  #     --insights-credential "{{ tower_insights_cred_name }}"
  #     --tower-username "{{ tower_username }}" 
  #     --tower-password "{{ tower_password }}" 
  #     --organization "{{ tower_organization }}"
  #     --tower-host "{{ tower_host }}"
  #     --insecure
  #   no_log: true
  #   tags:
  #     - tower-config
  #     - insights-create-inv
  
  # - name: Create {{ tower_insights_inv_name }} Source
  #   tower_inventory_source:
  #     name: Insights RHV Inventory Source
  #     description: Insights RHV Inventory Source
  #     state: present
  #     tower_host: "{{ tower_host }}"
  #     tower_username: "{{ tower_username }}"
  #     tower_password: "{{ tower_password }}"
  #     credential: RHV Credential
  #     source: rhv
  #     inventory: "{{ tower_insights_inv_name }}"
  #     overwrite: true
  #     validate_certs: false
  #   tags:
  #     - tower-config
  #     - insights-inv-source

  # - name: Update {{ tower_insights_inv_name }}
  #   command: > 
  #     tower-cli inventory batch_update
  #     --name "{{ tower_insights_inv_name }}"
  #     --tower-username "{{ tower_username }}" 
  #     --tower-password "{{ tower_password }}" 
  #     --organization "{{ tower_organization }}"
  #     --tower-host "{{ tower_host }}"
  #     --insecure
  #     --description-on
  #   no_log: true
  #   tags:
  #     - tower-config
  #     - insights-inv-update

  # - name: Create RHV Inventory
  #   tower_inventory:
  #     name: RHV MBU Inventory
  #     description:  RHV MBU Inventory
  #     state: present
  #     tower_host: "{{ tower_host }}"
  #     organization: "{{ tower_organization }}"
  #     tower_username: "{{ tower_username }}"
  #     tower_password: "{{ tower_password }}"
  #     validate_certs: false
  #     credential: 
  #   tags:
  #     - tower-config
  #     - rhv-inventory

        #- name: Create Insights Project
        #tower_project:
        # name: "Insights Project"
        #state: present
        #description: Ansible Tower Insights Integration Project
        #organization: "{{ tower_organization }}"
        #scm_credential: "{{ tower_insights_cred_name }}"
        #scm_type: insights
  
 